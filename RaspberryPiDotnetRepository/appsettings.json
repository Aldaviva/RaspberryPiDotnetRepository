{
	"repositoryBaseDir": "./repo",
	"tempDir": "./temp",
	"keepTempDownloads": true,

	// Insert the path to a binary-encoded public key (not ASCII-armored, because APT does not handle those)
	"gpgPublicKeyPath": "./me.gpg.pub",

	// Insert the path to your ASCII-armored private key
	"gpgPrivateKeyPath": "./me.gpg.priv",
	
	// Insert the tenant ID of the Azure OAuth app registration (Azure Portal > App registrations > your app > Overview > Essentials > Directory (tenant) ID)
	"cdnTenantId": null,

	// Insert the application/client ID of an Azure OAuth app registration (Azure Portal > App registrations > your app > Overview > Essentials > Application (client) ID)
	"cdnClientId": null,

	/* 
	 * 1. New-SelfSignedCertificate -KeyAlgorithm RSA -KeyLength 2048 -CertStoreLocation "Cert:\CurrentUser\My" -KeyExportPolicy Exportable -KeySpec Signature -Subject "CN=RaspberryPiDotnetRepository" -NotAfter (Get-Date).AddYears(100)
	 * 2. Use certmgr.msc to export this certificate as a CER file without the private key
	 * 3. Upload this public key to an Azure OAuth app (Azure Portal > App registrations > your app > Manage > Certificates & secrets > Certificates)
	 * 4. Use certmgr.msc to export the same certificate as a PFX file with the private key and a password
	 * 5. Insert the path to the PFX file in cdnCertFilePath
	 */
	"cdnCertFilePath": null,

	// Insert the password to the PFX file specified by cdnCertFilePath
	"cdnCertPassword": "",

	// Insert the GUID of your Azure Subscription (Azure Portal > Front Door and CDN profiles > your CDN profile > Settings > Properties > Subscription ID)
	"cdnSubscriptionId": null,

	// Insert the name of your CDN's Resource Group (Azure Portal > Front Door and CDN profiles > your CDN profile > Settings > Properties > Resource group)
	"cdnResourceGroup": null,

	// Insert the name of your CDN profile (Azure Portal > Front Door and CDN profiles > your CDN profile)
	"cdnProfile": null,

	// Insert the subdomain of your CDN endpoint hostname, without the .azureedge.net domain (Azure Portal > Front Door and CDN profiles > your CDN profile > Endpoints)
	"cdnEndpointName": null,

	// Paste the connection string to the Storage account (Azure Portal > Storage accounts > your storage account > Security + networking > Access keys > key1 or key2 > Connection string > Show > Copy)
	"storageConnection": "",

	// Insert the name of the Blob Storage container (Azure Portal > Storage accounts > your storage account > Data storage > Containers > your container > Settings > Name)
	"storageContainerName": "",

	"storageParallelUploads": 4,

	"Logging": {
		"LogLevel": {
			"Default": "Debug"
		}
	}
}